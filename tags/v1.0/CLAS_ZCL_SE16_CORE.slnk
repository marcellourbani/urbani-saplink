<?xml version="1.0" encoding="iso-8859-1"?>
<CLAS CLSNAME="ZCL_SE16_CORE" VERSION="1" LANGU="E" DESCRIPT="core logic for se16 clone" UUID="DC8AEB11598B10F19A66000C29E2C3D0" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="700" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <types CLSNAME="ZCL_SE16_CORE" CMPNAME="SELOPT_EL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071118" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="4 " SRCROW2="9 " SRCCOLUMN2="24 " TYPESRC_LENG="145 " TYPESRC="begin of selopt_el,
           id                   type string,
           rangetab             type ref to data,
         end of selopt_el
"/>
 <types CLSNAME="ZCL_SE16_CORE" CMPNAME="SELOPT_TAB" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071118" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="11 " SRCCOLUMN2="58 " TYPESRC_LENG="57 " TYPESRC="selopt_tab type standard table of selopt_el with key id
"/>
 <types CLSNAME="ZCL_SE16_CORE" CMPNAME="BOOL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071111" CHANGEDBY="BCUSER" CHANGEDON="20071117" TYPTYPE="1" TYPE="ABAP_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <types CLSNAME="ZCL_SE16_CORE" CMPNAME="ZSE16_PARAMETERS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071111" CHANGEDBY="BCUSER" CHANGEDON="20071118" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="35 " TYPESRC_LENG="214 " TYPESRC="begin of zse16_parameters,
               tabname type tabname,
               tabdesc type string,
               maxrec  type i,
               keysonly type abap_bool,
             end of zse16_parameters
"/>
 <publicSection>class ZCL_SE16_CORE definition
  public
  final
  create public .

*&quot;* public components of class ZCL_SE16_CORE
*&quot;* do not include other source files here!!!
public section.
  type-pools ABAP .

  types BOOL type ABAP_BOOL .
  types:
    begin of zse16_parameters,
               tabname type tabname,
               tabdesc type string,
               maxrec  type i,
               keysonly type abap_bool,
             end of zse16_parameters .

  data TABNAME type TABNAME read-only .
  data TABDESC type STRING read-only .
  data FIELDS type DDFIELDS read-only .
  data MAINFIELDS type DDFIELDS read-only .
  data USERFIELDS type DDFIELDS read-only .

  methods CONSTRUCTOR
    importing
      !NAME type TABNAME
    raising
      CX_SY_CREATE_OBJECT_ERROR .
  methods CLEAR_SEL .
  methods ADD_SEL
    importing
      !ID type STRING
      !RANGETAB type ref to DATA .
  methods GET_DATA
    importing
      !RECORDS type I default 0
    returning
      value(TAB) type ref to DATA .
  methods EXEC_QUERY
    importing
      !RECORDS type I default 0 .</publicSection>
 <protectedSection>*&quot;* protected components of class ZCL_SE16_CORE
*&quot;* do not include other source files here!!!
protected section.</protectedSection>
 <privateSection>*&quot;* private components of class ZCL_SE16_CORE
*&quot;* do not include other source files here!!!
private section.

  types:
    begin of selopt_el,
           id                   type string,
           rangetab             type ref to data,
         end of selopt_el .
  types:
    selopt_tab type standard table of selopt_el with key id .

  data DESCR type ref to CL_ABAP_STRUCTDESCR .
  data OPTIONS type SELOPT_TAB .
  data TAB_DATA type ref to DATA .

  methods CREATE_DATA
    exporting
      !RANGESTRUCT type ref to DATA
      !CONDITION type STRING .</privateSection>
 <localImplementation>*&quot;* local class implementation for public class
*&quot;* use this source file for the implementation part of
*&quot;* local helper classes</localImplementation>
 <localTypes>*&quot;* use this source file for any type declarations (class
*&quot;* definitions, interfaces or data types) you need for method
*&quot;* implementation or private method&apos;s signature</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <typeUsage CLSNAME="ZCL_SE16_CORE" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" EXPLICIT="X" IMPLICIT="X"/>
 <forwardDeclaration>ABAP</forwardDeclaration>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="DESCR" VERSION="1" LANGU="E" DESCRIPT="Runtime Type Services" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDBY="BCUSER" CHANGEDON="20071109" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="CL_ABAP_STRUCTDESCR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="FIELDS" VERSION="1" LANGU="E" DESCRIPT="DD: Field List" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDBY="BCUSER" CHANGEDON="20071117" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DDFIELDS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="MAINFIELDS" VERSION="1" LANGU="E" DESCRIPT="key/external key fields" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDBY="BCUSER" CHANGEDON="20071117" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DDFIELDS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="OPTIONS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071109" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SELOPT_TAB" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="TABDESC" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDBY="BCUSER" CHANGEDON="20071117" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="TABNAME" VERSION="1" LANGU="E" DESCRIPT="Table Name" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDBY="BCUSER" CHANGEDON="20071117" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TABNAME" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="TAB_DATA" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="BCUSER" CREATEDON="20071118" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="DATA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="700" TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZCL_SE16_CORE" CMPNAME="USERFIELDS" VERSION="1" LANGU="E" DESCRIPT="all fields but client" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDBY="BCUSER" CHANGEDON="20071117" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="DDFIELDS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <method CLSNAME="ZCL_SE16_CORE" CMPNAME="ADD_SEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071118" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="ADD_SEL" SCONAME="ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071117" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="ADD_SEL" SCONAME="RANGETAB" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071117" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="3" TYPE="DATA"/>
  <source>method add_sel.
  data: opt type selopt_el.
  field-symbols:&lt;intab&gt; type table,&lt;outtab&gt; type table.
  try.
      assign rangetab-&gt;* to &lt;intab&gt;.
      check &lt;intab&gt; is not initial.
      create data opt-rangetab like &lt;intab&gt;.
      assign opt-rangetab-&gt;* to &lt;outtab&gt;.
      &lt;outtab&gt; = &lt;intab&gt;.
      opt-id = id.
      append opt to options.
    catch cx_root.
  endtry.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_SE16_CORE" CMPNAME="CLEAR_SEL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071118" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>method CLEAR_SEL.
  free OPTIONS.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_SE16_CORE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDBY="BCUSER" CHANGEDON="20071117" MTDTYPE="2" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="CONSTRUCTOR" SCONAME="NAME" VERSION="1" LANGU="E" DESCRIPT="Table Name" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071111" CHANGEDBY="BCUSER" CHANGEDON="20071117" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TABNAME"/>
  <exception CLSNAME="ZCL_SE16_CORE" CMPNAME="CONSTRUCTOR" SCONAME="CX_SY_CREATE_OBJECT_ERROR" VERSION="1" LANGU="E" DESCRIPT="System Exception Creating Object" MTDTYPE="2" EDITORDER="1 " AUTHOR="BCUSER" CREATEDON="20071104" CHANGEDON="00000000"/>
  <source>method constructor.
  data: field like line of fields,
        desctmp type ref to cl_abap_typedescr.
  call method cl_abap_structdescr=&gt;describe_by_name
    exporting
      p_name         = name
    receiving
      p_descr_ref    = desctmp
    exceptions
      type_not_found = 1.
  if sy-subrc &lt;&gt; 0.
    raise exception type cx_sy_create_object_error.
  endif.
  descr ?= desctmp.
  tabname = name.
  fields = descr-&gt;get_ddic_field_list( ).
  userfields = fields.
  delete userfields where fieldname  eq &apos;MANDT&apos;.
  loop at userfields into field where keyflag is not initial or checktable is not initial.
    append field to mainfields.
  endloop.
  select single ddtext from dd02t into tabdesc
          where tabname = tabname
            and ddlanguage = sy-langu
            and as4local = &apos;A&apos;.
  if sy-subrc ne 0.
    select single ddtext from dd02t into tabdesc
         where tabname = tabname
           and ddlanguage = &apos;E&apos;
           and as4local = &apos;A&apos;.
  endif.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_SE16_CORE" CMPNAME="CREATE_DATA" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071110" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="700" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="CREATE_DATA" SCONAME="RANGESTRUCT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="3" TYPE="DATA"/>
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="CREATE_DATA" SCONAME="CONDITION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
  <source>method create_data.
  field-symbols:&lt;sel&gt; type any,
                &lt;optt&gt; type any table,
                &lt;sel_f&gt; type any table.
  data: struct_type type ref to cl_abap_structdescr,
        comp_tab    type cl_abap_structdescr=&gt;component_table,
        comp        like line of comp_tab.
  data: field_id(4) type n,
        opt type selopt_el,
        fieldname type string.
  loop at options into opt.
    concatenate &apos;S_&apos; field_id into comp-name.
    comp-type ?= cl_abap_elemdescr=&gt;describe_by_data_ref( opt-rangetab ).
    append comp to comp_tab.
    field_id = field_id + 1.
  endloop.
  if comp_tab is not initial.
    struct_type = cl_abap_structdescr=&gt;create( comp_tab ).
    create data rangestruct type handle struct_type.
    assign rangestruct-&gt;* to &lt;sel&gt;.
    loop at options into opt.
      assign opt-rangetab-&gt;* to &lt;optt&gt;.
      read table comp_tab into comp index sy-tabix.
      concatenate &apos;&lt;sel&gt;-&apos; comp-name into fieldname.
      if sy-tabix = 1.
        concatenate opt-id &apos;in&apos; fieldname into condition separated by space.
      else.
        concatenate condition &apos;and&apos; opt-id &apos;in&apos; fieldname into condition separated by space.
      endif.
      assign COMPONENT comp-name OF STRUCTURE &lt;sel&gt; to &lt;sel_f&gt;.
      &lt;sel_f&gt; = &lt;optt&gt;.
    endloop.
  endif.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_SE16_CORE" CMPNAME="EXEC_QUERY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071118" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="EXEC_QUERY" SCONAME="RECORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071118" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PARVALUE="0" PAROPTIONL="X"/>
  <source>method exec_query.
  data:rangestruct type ref to  data,
       condition   type string.
  create_data( importing rangestruct = rangestruct condition = condition ).
  create data tab_data type standard table of (tabname).
  field-symbols: &lt;t&gt; type any table,&lt;sel&gt; type any.
  assign tab_data-&gt;* to &lt;t&gt;.
  assign rangestruct-&gt;* to &lt;sel&gt;.
  if condition is initial.
    select * from (tabname) into table &lt;t&gt; up to records rows .
  else.
    select * from (tabname) into table &lt;t&gt; up to records rows
      where (condition).
  endif.
endmethod.</source>
 </method>
 <method CLSNAME="ZCL_SE16_CORE" CMPNAME="GET_DATA" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071118" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="GET_DATA" SCONAME="RECORDS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071117" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="I" PARVALUE="0" PAROPTIONL="X"/>
  <parameter CLSNAME="ZCL_SE16_CORE" CMPNAME="GET_DATA" SCONAME="TAB" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="BCUSER" CREATEDON="20071109" CHANGEDBY="BCUSER" CHANGEDON="20071117" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="DATA"/>
  <source>method get_data.
  tab = tab_data.
  return.
endmethod.</source>
 </method>
</CLAS>
